components:
  functions: false
  proxy: false
  pulsar_detector: false
monitoring:
  prometheus: false
  grafana: false
  node_exporter: false
  alert_manager: false
images:
  zookeeper:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
    customTools:
      backup:
        repository: "streamnative/pulsar-metadata-tool"
        tag: "2.11.1.1"
      restore:
        repository: "streamnative/pulsar-metadata-tool"
        tag: "2.11.1.1"
  bookie:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  presto:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
    exporter:
      repository: bitnami/jmx-exporter
      tag: "0.17.0"
      pullPolicy: IfNotPresent
  autorecovery:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  broker:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  proxy:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  pulsar_detector:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  functions:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  function_worker:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
  toolset:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
    kafka:
      repository: confluentinc/cp-kafka
      tag: "7.3.1"
      pullPolicy: IfNotPresent
    busybox:
      repository: busybox
      tag: "1.35.0"
      pullPolicy: IfNotPresent
  streamnative_console:
    repository: streamnative/private-cloud-console
    tag: "v2.1.3"
    pullPolicy: IfNotPresent
    hasCommand: false
  pulsar_metadata:
    repository: streamnative/sn-platform
    tag: "2.11.1.1"
    pullPolicy: IfNotPresent
auth:
  authentication:
    enabled: true
    provider: "jwt"
    jwt:
      enabled: true
      # Enable JWT authentication
      # If the token is generated by a secret key, set the usingSecretKey as true.
      # If the token is generated by a private key, set the usingSecretKey as false.
      usingSecretKey: false
    tls:
      enabled: true
  authorization:
    enabled: true
  superUsers:
    # broker to broker communication, broker superUserRoles
    broker: "admin,proxy-admin,broker-admin,admin-approle,pulsar-manager-admin"
    # if it is enabled, the roles configured in the proxy will not be used by the client
    proxyRolesEnabled: false
    # if proxyRolesEnabled is set to true, this role is only available to proxy connection brokers, please make sure the client does not use this role
    proxyRoles: proxy-admin
    # proxy to broker communication, proxy superUserRoles
    proxy: "admin,proxy-admin,admin-approle,pulsar-manager-admin"
    # websocket proxy to broker communication
    websocket: "admin,ws-admin,admin-approle,pulsar-manager-admin"
    # pulsar-admin client to broker/proxy communication
    client: "admin"
    # streamnative-console
    streamnative-console: "super,pulsar-manager-admin"
  # Enable vault based authentication
  vault:
    enabled: true

common:
  extraInitContainers: []

zookeeper:
  replicaCount: 3
  resources:
    requests:
      memory: "256Mi"
      cpu: "0.1"
    limits: {}
      # memory: "1Gi"
      # cpu: "0.4"
  volumes:
    data:
      name: data
      size: 50Gi
    dataLog:
      name: datalog
      size: 10Gi
  extraInitContainers: []
  initialMyId: 0
  peerType: "participant"
  autoRollDeployment: true
  jvm:
    memoryOptions:
    - >
      -Xms64m -Xmx128m
    gcOptions:
    - >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -Dcom.sun.management.jmxremote
      -Djute.maxbuffer=10485760
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:+DisableExplicitGC
      -XX:+PerfDisableSharedMem
      -Dzookeeper.forceSync=no
    extraOptions: []
    gcLoggingOptions: []
bookkeeper:
  replicaCount: 3
  securityContext:
    runAsNonRoot: true
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.2"
  volumes:
    journal:
      name: journal
      size: 10Gi
    ledgers:
      name: ledgers
      size: 50Gi
  jvm:
    memoryOptions:
    - >
      -Xms128m
      -Xmx256m
      -XX:MaxDirectMemorySize=256m
    gcOptions:
    - >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
      -verbosegc
    extraOptions: []
    gcLoggingOptions: []

autorecovery:
  component: recovery
  replicaCount: 1
  ports:
    http: 8000
  securityContext:
    runAsNonRoot: true
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.4"
  jvm:
    memoryOptions:
    - -Xms128m -Xmx256m
    gcOptions: []
    extraOptions: []
    gcLoggingOptions: []

pulsar_metadata:
  component: pulsar-init
  clusterName: "test1"
kop:
  ports:
    plaintext: 9092
    ssl: 9093
  auth:
    enabled: false
broker:
  component: broker
  replicaCount: 1
  ports:
    http: 8080
    https: 8443
    pulsar: 6650
    pulsarssl: 6651
  securityContext:
    runAsNonRoot: true
  kop:
    enabled: true
    tls:
      enabled: false
      trustCertsEnabled: false
  pulsarRestMessaging:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.2"
    limits: {}
  jvm:
    memoryOptions:
      - >
        -Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m
    gcOptions:
      - >
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=10
        -Dio.netty.leakDetectionLevel=disabled
        -Dio.netty.recycler.linkCapacity=1024
        -XX:+ParallelRefProcEnabled
        -XX:+UnlockExperimentalVMOptions
        -XX:+DoEscapeAnalysis
        -XX:G1NewSizePercent=50
        -XX:+DisableExplicitGC
        -XX:-ResizePLAB
        -XX:+ExitOnOutOfMemoryError
        -XX:+PerfDisableSharedMem
    extraOptions: []
    gcLoggingOptions: []
  configData:
    managedLedgerDefaultEnsembleSize: "2"
    managedLedgerDefaultWriteQuorum: "2"
    managedLedgerDefaultAckQuorum: "2"
    PULSAR_PREFIX_systemTopicEnabled: "true"
    PULSAR_PREFIX_topicLevelPoliciesEnabled: "true"
  service_account:
    annotations: {}
toolset:
  resources:
    requests:
      memory: 256Mi
      cpu: 0.1
  configData:
    PULSAR_MEM: >
      -Xms64M
      -Xmx128M
streamnative_console:
  component: streamnative-console
  # username: "apachepulsar"
  # password: "apachepulsar"
  ports:
    frontend: 9527
    backend: 7750
  replicaCount: 1
  probe:
    liveness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 10
      periodSeconds: 30
    readiness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 10
      periodSeconds: 30
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 10
      periodSeconds: 30
  resources:
    requests:
      memory: 250Mi
      cpu: 0.1
    limits: {}
  volumes:
    persistence: true
    data:
      name: data
      size: 10Gi
  securityContext: {}
  service:
    spec: {}
    annotations: {}
    ports:
      frontend: 9527
      backend: 7750

  configData:
    DEFAULT_ORGANIZATION: "streamnative"
    INSTANCE_NAME: "pulsar"
    INIT_DEFAULT_ENVIRONMENT: false
    BACKEND_DEFAULT_SUPER_USER_ROLE: "admin"
    GLOBAL_RESOURCE_READ_ONLY: false
    REDIRECT_SCHEME: ""
    REDIRECT_HOST: ""
    REDIRECT_PORT: ""
    GOOGLE_OAUTH2_ENABLED: false
    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_RESTRICT_DOMAIN_SUFFIXES_NAME: ""
    GOOGLE_REDIRECT_URI: ""
    GRAFANA_AUTH_PROXY: false
    GRAFANA_AUTH_PROXY_USER: ""
    CONNECTOR_ENABLED: true

rbac:
  enable: true
  roleName: pulsar-operator
  roleBindingName: pulsar-operator-cluster-role-binding

vault:
  component: "vault"
  replicaCount: 3
  serviceAccount:
    created: true
    name: ""
  oidcToken:
    rotation_period: 24h
    verification_ttl: 24h
    ttl: 12h
  serviceType: "ClusterIP"
  tolerations: []
  nodeSelector: {}
  annotations:
    prometheus.io/port: "9091"
  labels: {}
  volumeClaimTemplates: []
  affinity:
    anti_affinity: true
    zone_anti_affinity: true
    type: preferredDuringSchedulingIgnoredDuringExecution
  unsealConfig: {}
  volumeMounts:
  - name: vault-raft
    mountPath: /vault/file
  envsConfig: {}
  config:
    storage:
      raft:
        path: "/vault/file"
    listener:
      tcp:
        tls_disable: true
        address: "0.0.0.0:8200"
        telemetry:
          unauthenticated_metrics_access: true
    api_addr: "http://${.Env.POD_NAME}:8200"
    cluster_addr: "http://${.Env.POD_NAME}:8201"
    ui: true
    telemetry:
      statsd_address: ""
    bankVaults:
      probe:
        readinessProbe: {}
        startupProbe: {}
        livenessProbe: {}
  resources:
    limits:
      memory: "512Mi"
      cpu: "200m"
    requests:
      memory: "256Mi"
      cpu: "100m"
  volume:
    persistence: true
    name: "vault-volume"
    size: 10Gi

extraResources: []
